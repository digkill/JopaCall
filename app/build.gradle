// Файл: app/build.gradle

plugins {
  // --- ГЛАВНОЕ ИСПРАВЛЕНИЕ: Разделены плагины ---
  // Каждый плагин должен быть на новой строке.
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  // Плагин для сериализации обязателен для работы @Serializable
  id 'org.jetbrains.kotlin.plugin.serialization'
}

// =================================================================================
// Загрузка секретов из local.properties
// =================================================================================
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')

if (localPropertiesFile.exists()) {
  localProperties.load(new FileInputStream(localPropertiesFile))
} else {
  logger.warn("Файл 'local.properties' не найден. Используются значения по умолчанию.")
}

android {
  namespace 'org.mediarise.dialer'
  compileSdk 36

  defaultConfig {
    applicationId 'org.mediarise.dialer'
    minSdk 29
    targetSdk 36
    versionCode 10
    versionName "1.0.0"

    // Фильтр для нативных библиотек WebRTC
    ndk {
      abiFilters "x86_64", "arm64-v8a"
    }

    // ... (applicationId, minSdk, и т.д. ...)

    // =================================================================================
    // ГЛАВНОЕ ИСПРАВЛЕНИЕ: Используем правильные имена свойств с префиксом "app."
    // =================================================================================
    buildConfigField "String", "WS_BASE", "\"${localProperties.getProperty('app.ws_base', '')}\""
    buildConfigField "String", "TURN_URL",  "\"${localProperties.getProperty('app.turn_url', '')}\""
    buildConfigField "String", "TURN_USER", "\"${localProperties.getProperty('app.turn_user', '')}\""
    buildConfigField "String", "TURN_PASS", "\"${localProperties.getProperty('app.turn_pass', '')}\""

  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug {
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"
      minifyEnabled false
      shrinkResources false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
  kotlinOptions {
    jvmTarget = '17'
  }

  packaging {
    resources {
      excludes += [
              '/META-INF/{AL2.0,LGPL2.1}',
              'META-INF/DEPENDENCIES',
              'META-INF/LICENSE*',
              'META-INF/NOTICE*'
      ]
    }
  }

  buildFeatures {
    buildConfig true
  }
}

dependencies {
  // WebRTC
  implementation "io.github.webrtc-sdk:android:137.7151.04"

  // Net & JSON
  // Замена okhttp на стабильную версию 4.x для совместимости с WebRTC SDK
  implementation "com.squareup.okhttp3:okhttp:5.1.0"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2"
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"

  // AndroidX & UI
  implementation "androidx.core:core-ktx:1.17.0"
  implementation "androidx.appcompat:appcompat:1.7.1"
  implementation "androidx.activity:activity-ktx:1.11.0"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.9.4"
  implementation "com.google.android.material:material:1.13.0"
}
